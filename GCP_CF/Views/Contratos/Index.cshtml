@model IEnumerable<GCP_CF.Models.Contratos>

@{
    ViewBag.Title = "Contratos Marco";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<link rel="stylesheet" href=" https://cdn.datatables.net/fixedheader/3.1.5/css/fixedHeader.bootstrap.min.css">
<link rel="stylesheet" href=" https://cdn.datatables.net/responsive/2.2.3/css/responsive.bootstrap.min.css">
   
<h2 class="text-left">Contratos Marco</h2>

<p class="text-left">
    @Html.ActionLink("Crear Nuevo", "Create", null, new { @class = "btn btn-default btn-large" })
</p>

<table id="example" class="table  table-bordered" style="width:100%">
    <thead>
        <tr>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.FechaInicio)
            </th>
            <th class="head-table">
                Numero Contrato
            </th>
            <th class="head-table">
                Entidad Contratante
            </th>

            <th class="head-table">
                @Html.DisplayNameFor(model => model.Plazo)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.FechaTerminacion)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.ValorContrato)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.ValorAdministrar)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.Honorarios)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.Crp)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.FechaCrp)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.Cdp)
            </th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.FechaCdp)
            </th>
            <th class="head-table">
                Estado
            </th>
            <th class="head-table">Acciones</th>
            <th class="head-table">
                @Html.DisplayNameFor(model => model.ObjetoContractual)
            </th>
            <th class="head-table">
                Abogado
            </th>
            <th class="head-table">
                Supervisor
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.FechaInicio)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.NumeroContrato)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.EntidadContratante.NombreCompleto)
            </td>

            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.Plazo)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.FechaTerminacion)
            </td>
            <td class="border-cell" style="width:100px">
                @Html.DisplayFor(modelItem => item.ValorContrato)
            </td>
            <td class="border-cell" style="font-size:9pt;width:250px">
                @Html.DisplayFor(modelItem => item.ValorAdministrar)
            </td>
            <td class="border-cell" style="font-size:9pt;width:250px">
                @Html.DisplayFor(modelItem => item.Honorarios)
            </td>

            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.Crp)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.FechaCrp)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.Cdp)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.FechaCdp)
            </td>
            <td class="border-cell" style="width:90px">
                @Html.DisplayFor(modelItem => item.Estado)
            </td>

            <td class="border-cell" style="width:120px">
                @Html.ActionLink("Edit", "Edit", new { id = item.Contrato_Id }, new { @class = "btn-edit", @title = "Editar" })
                @Html.ActionLink("Detalles", "Details", new { id = item.Contrato_Id }, new { @class = "btn-details", @title = "Detalles" })
                @*@Html.ActionLink("Eliminar", "Delete", new { id = item.Contrato_Id }, new { @class = "btn-delete", @title = "Eliminar" })*@
            </td>
            <td class="border-cell" style="font-size:9pt;width:250px">
                @Html.DisplayFor(modelItem => item.ObjetoContractual)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.PersonaAbogado.NombreCompleto)
            </td>
            <td class="border-cell">
                @Html.DisplayFor(modelItem => item.PersonaSupervisor.NombreCompleto)
            </td>
        </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.FechaInicio)*@
            </th>
            <th>
                @*Numero Contrato*@
            </th>
            <th>
                @*Entidad Contratante*@
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Plazo)*@
            </th>
            <th style="font-size:10pt">
              Totales
            </th>
            <th style="font-size:10pt">
                <strong>@String.Format("{0:N0}",@Model.Sum(i => i.ValorContrato))</strong>
            </th>
            <th>
                <strong>@String.Format("{0:N0}", @Model.Sum(i => i.ValorAdministrar))</strong>
            </th>
            <th>
                <strong>@String.Format("{0:N0}", @Model.Sum(i => i.Honorarios))</strong>
            </th>
            <th>
               
            </th>
            <th>
              
            </th>
            <th>
              
            </th>
            <th>
               
            </th>
            <th>
               
            </th>
            <th></th>
            <th>
                @*@Html.DisplayNameFor(model => model.ObjetoContractual)*@
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ValorAdministrar)*@
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Honorarios)*@
            </th>
        </tr>
    </tfoot>
</table>


<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
@*<script src="//cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"></script>*@
<script src="https://cdn.datatables.net/fixedheader/3.1.5/js/dataTables.fixedHeader.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.3/js/responsive.bootstrap.min.js"></script>





<script>
    var activeFilter = 0;

    $("#searchNumero").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchNumeroContrato", "Contratos")',
                    dataType: "json",
                    type: "POST",
                    data: {
                        numeroContrato: $("#searchNumero").val()},
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.NumeroContrato, value: item.NumeroContrato };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error.");
                    }
                });
            }
            });

    $("#searchEntidad").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchEntidadContratante", "Contratos")',
                    dataType: "json",
                    type: "POST",
                    data: {
                        entidad: $("#searchEntidad").val()},
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Entidad, value: item.Entidad };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error.");
                    }
                });
            }
    });

    function checkabiertos(valor) {
        if (valor.value == "true") {
            $("#chkCerrados").prop("checked", false);
            $("#chkTodos").prop("checked", false);
        }
    }

    function checkcerrados(valor) {

        if (valor.value == "true") {
            $("#chkAbiertos").prop("checked", false);
            $("#chkTodos").prop("checked", false);
        }
    }

    function checktodos(valor) {
        if (valor.value == "true") {
            $("#chkAbiertos").prop("checked", false);
            $("#chkCerrados").prop("checked", false);
        }
    }


</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, true).isValid();
            }

            $('#datepicker').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });

            $('#datepicker2').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });
        });

        $(document).ready(function () {
            var table = $('#example').DataTable({
                responsive: true,
                "language": {
                    "lengthMenu": "Display _MENU_ records per page",
                    "zeroRecords": "No se encontraron resultados",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "No hay información disponible",
                    "infoFiltered": "(filtered from _MAX_ total records)",
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
            new $.fn.dataTable.FixedHeader(table);
        });
    </script>
}
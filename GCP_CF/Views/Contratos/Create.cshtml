@model GCP_CF.Models.Contratos

@{
    ViewBag.Title = "Crear Contrato";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear Contrato</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal text-left">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.ContratoMarco_Id, "Contrato Marco", htmlAttributes: new { @class = "control-label" })</div>
            @Html.DropDownList("ContratoMarco_Id", null, "Seleccione Contrato Marco", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContratoMarco_Id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.TipoContrato_Id, "Tipo Contrato", htmlAttributes: new { @class = "control-label" })*</div>
            @Html.DropDownList("TipoContrato_Id", null, "Seleccione Tipo Contrato", htmlAttributes: new { @class = "form-control", @id = "tipoContrato" })
            @Html.ValidationMessageFor(model => model.TipoContrato_Id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.NumeroContrato, htmlAttributes: new { @class = "control-label" })</div>
            @Html.EditorFor(model => model.NumeroContrato, new { htmlAttributes = new { @class = "form-control", @id = "numeroContrato" } })
            @Html.ValidationMessageFor(model => model.NumeroContrato, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.Persona_Id, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.DropDownList("Persona_Id", null, "Seleccione Entidad", htmlAttributes: new { @class = "form-control", @id = "entidadContratante" })
            @Html.ValidationMessageFor(model => model.Persona_Id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.FechaActaInicio, htmlAttributes: new { @class = "control-label" }) *
            <div class='input-group date text-center' id='datetimeFechaActaInicio' style="width:278px">
                @Html.EditorFor(model => model.FechaActaInicio, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "text-aling:center", @id = "fechaActa" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.TipoEstadoContrato_Id, "Estado Contrato", htmlAttributes: new { @class = "control-label" })*</div>
            @Html.DropDownList("TipoEstadoContrato_Id", null, "Seleccione Estado Contrato", htmlAttributes: new { @class = "form-control", @id = "estadoContrato" })
            @Html.ValidationMessageFor(model => model.TipoEstadoContrato_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label" })*
            <div class='input-group date text-center' id='datetimeFechaInicio' style="width:280px">
                @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "text-aling:center", @id = "fechaInicial" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.FechaTerminacion, htmlAttributes: new { @class = "control-label" })*
            <div class='input-group date text-center' id='datetimeFechaTerminacion' style="width:280px">
                @Html.EditorFor(model => model.FechaTerminacion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "text-aling:center", @id = "fechaFinal" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.Plazo, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.EditorFor(model => model.Plazo, new { htmlAttributes = new { @class = "form-control", @id = "plazo" } })
            @Html.ValidationMessageFor(model => model.Plazo, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Plazo)

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.PersonaSuperviosr_Id, "Supervisor", htmlAttributes: new { @class = "control-label" })</div>
            @Html.DropDownList("PersonaSuperviosr_Id", null, "Seleccione Supervisor", htmlAttributes: new { @class = "form-control", @id = "supervisor" })
            @Html.ValidationMessageFor(model => model.PersonaSuperviosr_Id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.PersonaAbogado_Id, "Abogado", htmlAttributes: new { @class = "control-label" })</div>
            @Html.DropDownList("PersonaAbogado_Id", null, "Seleccione Abogado", htmlAttributes: new { @class = "form-control", @id = "abogado" })
            @Html.ValidationMessageFor(model => model.PersonaAbogado_Id, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.PersonaSupervisorTecnico_Id, "Supervisor Técnico", htmlAttributes: new { @class = "control-label" })</div>
            @Html.DropDownList("PersonaSupervisorTecnico_Id", null, "Seleccione Supervisor Técnico", htmlAttributes: new { @class = "form-control", @id = "supervisorTecnico" })
            @Html.ValidationMessageFor(model => model.PersonaSupervisorTecnico_Id, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.Crp, htmlAttributes: new { @class = "control-label" })</div>
            @Html.EditorFor(model => model.Crp, new { htmlAttributes = new { @class = "form-control", @id = "crp" } })
            @Html.ValidationMessageFor(model => model.Crp, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.FechaCrp, htmlAttributes: new { @class = "control-label" })
            <div class='input-group date text-center' id='datetimeFechaCrp' style="width:280px">
                @Html.EditorFor(model => model.FechaCrp, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "text-aling:center", @id = "fechaCrp" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })</div>
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @id = "year" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.Cdp, htmlAttributes: new { @class = "control-label" })</div>
            @Html.EditorFor(model => model.Cdp, new { htmlAttributes = new { @class = "form-control", @id = "cdp" } })
            @Html.ValidationMessageFor(model => model.Cdp, "", new { @class = "text-danger" })


        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.FechaCdp, htmlAttributes: new { @class = "control-label" })
            <div class='input-group date text-center' id='datetimeFechaCdp' style="width:280px">
                @Html.EditorFor(model => model.FechaCdp, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @style = "text-aling:center", @id = "fechaCdp" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.ValorContrato, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.EditorFor(model => model.ValorContratoAux, new { htmlAttributes = new { @class = "form-control", @id = "valorContrato" } })
            @Html.ValidationMessageFor(model => model.ValorContratoAux, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.ValorAdministrar, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.EditorFor(model => model.ValorAdministrarAux, new { htmlAttributes = new { @class = "form-control", @id = "valorAdministrar" } })
            @Html.ValidationMessageFor(model => model.ValorAdministrarAux, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-4">
            <div>@Html.LabelFor(model => model.Honorarios, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.EditorFor(model => model.HonorariosAux, new { htmlAttributes = new { @class = "form-control", @id = "honorarios" } })

        </div>

        <div class="col-md-4">
            <div> @Html.LabelFor(model => model.FormaPagoId, "Forma de Pago", htmlAttributes: new { @class = "control-label" })</div>
            @Html.DropDownList("FormaPagoId", null, "Seleccione Forma de Pago", htmlAttributes: new { @class = "form-control", @id = "formaPago" })
            @Html.ValidationMessageFor(model => model.FormaPagoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            <div>@Html.LabelFor(model => model.ObjetoContractual, htmlAttributes: new { @class = "control-label" })*</div>
            @Html.EditorFor(model => model.ObjetoContractual, new { htmlAttributes = new { @class = "form-control", @id = "objeto", @style = "max-width:500px" } })
            @Html.ValidationMessageFor(model => model.ObjetoContractual, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6" id="editor-multiline-field">
            <div>@Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label" })</div>
            @Html.EditorFor(model => model.Observaciones,new { htmlAttributes = new { @class = "form-control", @id = "observaciones",@style="max-width:500px" } })
            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group text-center">
        <div class="col-md-12">
            <input type="submit" value="Crear Contrato" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div class="text-center">
    @Html.ActionLink("Regresar a la Lista", "Index")
</div>
@*Alert Error*@
<div class="modal fade" tabindex="-1" id="PopUPModalError" data-keyboard="false" data-backdrop="" style="position:center;">
    <div class="modal-dialog alert-Error" style="width:30%;">
        <div class="">
            <div class="row">
                <div class="col-lg-11 modal-body" id="bodyError" style="color:#fff;">
                </div>
                <div class="col-lg-1 text-right">
                    <button type="button" id="btnSave" class="close" data-dismiss="modal" style="color:#fff !important;padding-right:10px;">×</button>
                </div>
            </div>
        </div>
    </div>
</div>
@*<script src="//code.jquery.com/jquery-1.12.0.min.js"></script>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
       
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, true).isValid();
            }
            var fechaActual = new Date();
            //fechaActual.setHours(23, 59, 59, 0);

            $('#datetimeFechaInicio').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });

            $('#datetimeFechaTerminacion').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                minDate: fechaActual,
                useCurrent: false
            });

            $('#datetimeFechaActaInicio').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });


            $('#datetimeFechaCrp').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });

            $('#datetimeFechaCdp').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                useCurrent: false
            });


            $("#fechaFinal").blur(function () {
                var start = moment(stringToDate($("#fechaInicial").val(), "dd/MM/yyyy", "/"));
                var end = moment(stringToDate($("#fechaFinal").val(), "dd/MM/yyyy", "/"));

                if (start > end) {
                    document.getElementById("fechaFinal").value = "";
                    $('#fechaFinal').css('border-color', 'red');
                    $("#bodyError").html('<div><strong>Error!</strong> La Fecha Final debe ser mayor que la Fecha Inicial</div>');
                    $("#PopUPModalError").modal('show');
                    setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                     }, 5000);
                     return false;
                }
                else {
                    $('#fechaFinal').css('border-color', 'green');
                    $("#plazo").val(end.diff(start, "days"));
                }

            });

            function stringToDate(_date, _format, _delimiter) {
                var formatLowerCase = _format.toLowerCase();
                var formatItems = formatLowerCase.split(_delimiter);
                var dateItems = _date.split(_delimiter);
                var monthIndex = formatItems.indexOf("mm");
                var dayIndex = formatItems.indexOf("dd");
                var yearIndex = formatItems.indexOf("yyyy");
                var month = parseInt(dateItems[monthIndex]);
                month -= 1;
                var formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);
                return formatedDate;
            }



        $("#valorContrato").blur(function () {
        $("#valorContrato").val(parseFloat($('#valorContrato').val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        });
        $("#valorAdministrar").blur(function () {
           $("#valorAdministrar").val(parseFloat($('#valorAdministrar').val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        });
        $("#honorarios").blur(function () {
            $("#honorarios").val(parseFloat($('#honorarios').val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        });


            //Obtengo el numero del contrato
         $("#tipoContrato").change(function () {
                var url = '@Url.Action("GetDocumento", "Contratos")';
                $.ajax({
                type: 'POST',
                url: url,
                    data: { id: $("#tipoContrato").val()},
                    success: function (data) {
                        $("#numeroContrato").val(data);
                },
                    error: function (ex) {
                        document.getElementById("numeroContrato").value = "";  
                }
                });
            });

        });

        //Validaciones

        $("#tipoContrato").change(function () {
            if ($('#tipoContrato').val() == "") {
                $('#tipoContrato').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Tipo Contrato es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {
                $('#tipoContrato').css('border-color', 'green');

            }

        });

        $("#entidadContratante").change(function () {
            if ($('#tipoContrato').val() == "") {
                document.getElementById("entidadContratante").value = "";
                $('#tipoContrato').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Tipo Contrato es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {
                $('#entidadContratante').css('border-color', 'green');
            }
        });


        $("#entidadContratante").change(function () {
            validateEntidadContratante();
        });


        $("#fechaActa").blur(function () {
            validateTipoContrato()
            validateEntidadContratante();
            validateFechaActa();
        });

        $("#estadoContrato").change(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
        });

        $("#fechaInicial").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
        });

        $("#fechaFinal").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
        });

        $("#supervisor").change(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validatesupervisor();
        });

        $("#abogado").change(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateAbogado();
        });

        $("#supervisorTecnico").change(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateSupervisorTecnico();
        });

        $("#crp").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateCrp();
        });

          $("#fechaCrp").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateFechaCrp();
          });

        $("#year").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateYear();
        });

        $("#cdp").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateCdp();
        });

        $("#fechaCdp").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal(); 
            validateFechaCdp();
        });



        $("#valorContrato").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateValorContrato();
        });

        $("#valorAdministrar").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateValorContrato();
            validateValorAdministrar();
        });

        $("#honorarios").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateValorContrato();
            validateValorAdministrar();
            validateHonorarios();
        });

        $("#objeto").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateValorContrato();
            validateValorAdministrar();
            validateHonorarios();
            validateObjeto();
        });

        $("#observaciones").blur(function () {
            validateTipoContrato();
            validateEntidadContratante();
            validateFechaActa();
            validateEstadoContrato();
            validateFechaInicial();
            validateFechaFinal();
            validateValorContrato();
            validateValorAdministrar();
            validateHonorarios();
            validateObjeto();
            validateObservaciones();
        });



        //$("#abogado").change(function () {
        //    validateTipoContrato();
        //    validateEntidadContratante();
        //    validateFechaActa();
        //    validateEstadoContrato();
        //    validateFechaInicial();
        //    validateFechaFinal();
        //    validatesupervisor();
        //    validateAbogado();
        //});

        //$("#supervisorTecnico").change(function () {
        //    validateTipoContrato();
        //    validateEntidadContratante();
        //    validateFechaActa();
        //    validateEstadoContrato();
        //    validateFechaInicial();
        //    validateFechaFinal();
        //    validatesupervisor();
        //    validateAbogado();
        //    validateSupervisorTecnico();
        //});

        function validateTipoContrato() {
            if ($('#tipoContrato').val() == "") {
                $('#tipoContrato').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Tipo Contrato es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {
                $('#tipoContrato').css('border-color', 'green');

            }
        }

        function validateEntidadContratante() {
            if ($('#entidadContratante').val() == "") {
                $('#entidadContratante').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Entidad Contratante es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#entidadContratante').css('border-color', 'green');
            }
        }

        function validateFechaActa() {
            if ($('#fechaActa').val() == "") {
                $('#fechaActa').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Fecha Acta es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#fechaActa').css('border-color', 'green');
            }
        }

        function validateEstadoContrato() {
            if ($('#estadoContrato').val() == "") {
                $('#estadoContrato').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Estado Contrato es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#estadoContrato').css('border-color', 'green');
            }
        }

        function validateFechaInicial() {
            if ($('#fechaInicial').val() == "") {
                $('#fechaInicial').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Fecha Inicial es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#fechaInicial').css('border-color', 'green');
            }
        }

        function validateFechaFinal() {
            if ($('#fechaFinal').val() == "") {
                $('#fechaFinal').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Fecha Final es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#fechaFinal').css('border-color', 'green');
            }
        }

        function validatesupervisor() {
           $('#supervisor').css('border-color', 'green');
        }

        function validateAbogado() {
          $('#abogado').css('border-color', 'green');
        }

        function validateSupervisorTecnico() {
          $('#supervisorTecnico').css('border-color', 'green');

        }

        function validateCrp() {
            $('#crp').css('border-color', 'green');

        }

        function validateFechaCrp() {

           $('#fechaCrp').css('border-color', 'green');

        }

        function validateYear() {

            $('#year').css('border-color', 'green');

        }

        function validateCdp() {
            $('#cdp').css('border-color', 'green');

        }

        function validateFechaCdp() {

            $('#fechaCdp').css('border-color', 'green');

        }

        function validateValorContrato() {
            if ($('#valorContrato').val() == "") {
                $('#valorContrato').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Valor Contrato es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {
                if (!/^([0-9.,])*$/.test($('#valorContrato').val())) {
                    $('#valorContrato').css('border-color', 'red');
                    $("#bodyError").html('<div><strong>Error!</strong> El campo Valor Contrato debe ser un número.</div>');
                    $("#PopUPModalError").modal('show');
                    setTimeout(function () {
                        $('#PopUPModalError').modal('hide');
                    }, 5000);
                    return false;
                }
                else {
                    // $("#valorContrato").val(parseFloat($('#valorContrato').val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                    $('#valorContrato').css('border-color', 'green');
                }

            }
        }

        function validateValorAdministrar() {
            if ($('#valorAdministrar').val() == "") {
                $('#valorAdministrar').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Valor Administrar es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {
                if (!/^([0-9.,])*$/.test($('#valorAdministrar').val())) {
                    $('#valorAdministrar').css('border-color', 'red');
                    $("#bodyError").html('<div><strong>Error!</strong> El campo Valor Administrar debe ser un número.</div>');
                    $("#PopUPModalError").modal('show');
                    setTimeout(function () {
                        $('#PopUPModalError').modal('hide');
                    }, 5000);
                    return false;
                }
                else {
                     //$("#valorAdministrar").val(parseFloat($('#valorContrato').val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                    $('#valorAdministrar').css('border-color', 'green');
                }

            }
        }

        function validateHonorarios() {
           $('#honorarios').css('border-color', 'green');

        }

        function validateObjeto() {
            if ($('#objeto').val() == "") {
                $('#objeto').css('border-color', 'red');
                $("#bodyError").html('<div><strong>Error!</strong> El campo Objeto es requerido</div>');
                $("#PopUPModalError").modal('show');
                setTimeout(function () {
                    $('#PopUPModalError').modal('hide');
                }, 5000);
                return false;
            }
            else {

                $('#objeto').css('border-color', 'green');
            }
        }

        function validateObservaciones() {
                $('#observaciones').css('border-color', 'green');
        }
 
    </script>

}

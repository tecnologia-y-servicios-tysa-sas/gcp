@model GCP_CF.Models.Factura

@{
    double porcentajeIva = double.Parse(System.Configuration.ConfigurationManager.AppSettings["porcentajeIva"]);
    var formatter = new System.Globalization.CultureInfo("es-CO", false).NumberFormat;
    formatter.NumberGroupSeparator = ",";
    formatter.NumberDecimalSeparator = ".";
    formatter.NumberDecimalDigits = 2;
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<div id="mensajeErrorCreacion" style="display: none">@ViewBag.MensajeError</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="hidden" name="defaultPorcentajeIva" id="defaultPorcentajeIva" value="@porcentajeIva" />

    if (ViewBag.IsEdit)
    {
        @Html.HiddenFor(model => model.Factura_Id, htmlAttributes: new { @id = "idFactura" });
    }

    <div class="form-horizontal text-left">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel">
            <div class="panel-body">
                <h3>Información Básica</h3>
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Numero, "Número Factura", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @id = "numero" } })
                        @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Anio, "Año", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.Anio, new { htmlAttributes = new { @class = "form-control", @id = "anio" } })
                        @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Mes, "Mes", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.DropDownList("Mes", null, "Seleccione...", htmlAttributes: new { @class = "form-control", @id = "mes" })
                        @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Estado_Id, "Estado", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.DropDownList("Estado_Id", null, "Seleccione...", htmlAttributes: new { @class = "form-control", @id = "idEstado" })
                        @Html.ValidationMessageFor(model => model.Estado_Id, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.FechaPago, htmlAttributes: new { @class = "control-label" }) *</div>
                        <div class='input-group date text-center' id='datetimeFechaPago' style="width:278px">
                            @Html.EditorFor(model => model.FechaPago, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "fechaPago" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar">
                                </span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.FechaPago, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Municipio_Id, "Municipio o Entidad", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.DropDownList("Municipio_Id", null, "Seleccione...", htmlAttributes: new { @class = "form-control", @id = "idMunicipio" })
                        @Html.ValidationMessageFor(model => model.Municipio_Id, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.FechaEntrega, htmlAttributes: new { @class = "control-label" }) *</div>
                        <div class='input-group date text-center' id='datetimeFechaEntrega' style="width:278px">
                            @Html.EditorFor(model => model.FechaEntrega, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "fechaEntrega" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar">
                                </span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.FechaEntrega, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.FechaVencimiento, htmlAttributes: new { @class = "control-label" }) *</div>
                        <div class='input-group date text-center' id='datetimeFechaVencimiento' style="width:278px">
                            @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @id = "fechaVencimiento" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar">
                                </span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4"> </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <div>@Html.LabelFor(model => model.Concepto, "Concepto", htmlAttributes: new { @class = "control-label" })</div>
                            @Html.EditorFor(model => model.Concepto, new { htmlAttributes = new { @class = "form-control", @id = "concepto", @style = "max-width: 500px" } })
                            @Html.ValidationMessageFor(model => model.Concepto, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <div>@Html.LabelFor(model => model.Objeto, "Objeto", htmlAttributes: new { @class = "control-label" }) *</div>
                            @Html.EditorFor(model => model.Objeto, new { htmlAttributes = new { @class = "form-control", @id = "objeto", @style = "max-width: 500px" } })
                            @Html.ValidationMessageFor(model => model.Objeto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        </div>

        <div class="panel">
            <div class="panel-body">
                <h3>Información de Pagos</h3>
                @{
                    string mostrarRegionPagos = "none";
                    string mostrarRegionMensaje = "block";
                    if (Model != null && Model.PagoContrato != null && Model.PagoContrato.Count > 0)
                    {
                        mostrarRegionPagos = "block";
                        mostrarRegionMensaje = "none";
                    }
                }
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.Contrato_Id, "Contrato", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.NumeroContrato, new { htmlAttributes = new { @class = "form-control", @id = "numeroContrato", @value = "@ViewBag.NumeroContrato" } })
                        @*<input type="text" class="form-control" id="numeroContrato" name="numeroContrato" value="@ViewBag.NumeroContrato" />*@
                        <a href="javascript:void(0)" onclick="ConsultarContrato()"><i class="glyphicon glyphicon-search"></i></a>
                        @Html.HiddenFor(model => model.Contrato_Id, new { @id = "idContrato" })
                        @Html.ValidationMessageFor(model => model.Contrato_Id, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-8">
                        <!-- Mensaje-->
                        <div id="alertaPagos" class="alert alert-info" style="width: 100%; display: @mostrarRegionMensaje">Por favor busque por número de contrato para mostrar el listado de pagos</div>
                        <!-- Pagos -->
                        <div id="regionPagos" style="width: 100%; display: @mostrarRegionPagos">
                            <div>Por favor seleccione al menos un pago de la lista:<br /><br /></div>
                            <table id="tablaPagos" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th class="head-table col-md-1" style="width: 75px">&nbsp;</th>
                                        <th class="head-table col-md-2">No.</th>
                                        <th class="head-table col-md-4">Fecha Pago</th>
                                        <th class="head-table col-md-5">Valor Pago</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null && Model.PagoContrato != null && Model.PagoContrato.Count > 0)
                                    {
                                        var pagos = Model.PagoContrato;
                                        for (int i = 0; i < Model.PagoContrato.Count; i++)
                                        {
                                            <tr class="filaPago" id="filaPago_@pagos[i].PagosContrato_Id">
                                                <td class="border-cell col-md-1 text-center" style="width: 75px">
                                                    <input type="checkbox" class="chkPagos" name="idPagoContrato" id="idPagoContrato_@pagos[i].PagosContrato_Id" value="@pagos[i].PagosContrato_Id" onchange="@((i + 1) < pagos.Count ? "HabilitarSiguientePago(" + pagos[i].PagosContrato_Id + ", " + pagos[i + 1].PagosContrato_Id + "); " : "ActualizarValorHonorarios(" + pagos[i].PagosContrato_Id + ", -1);")" checked="checked" />
                                                </td>
                                                <td class="border-cell col-md-2 text-right">@pagos[i].NumeroPago</td>
                                                <td class="border-cell col-md-4 text-center">
                                                    @pagos[i].Fecha.ToShortDateString()
                                                    <input type="hidden" class="valorFecha" id="valorFecha_@pagos[i].PagosContrato_Id" value="@pagos[i].Fecha.ToShortDateString()" />
                                                </td>
                                                <td class="border-cell col-md-5 text-right">
                                                    @pagos[i].Valor.ToString("#,###.#0", formatter)
                                                    <input type="hidden" class="valorPago" id="valorPago_@pagos[i].PagosContrato_Id" value="@pagos[i].Valor" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                            <div>Si desea asociar otros pagos, por favor repita la búsqueda con el actual u otro número de contrato.</div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.TotalHonorarios, "Honorarios", htmlAttributes: new { @type = "number", @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.TotalHonorariosAux, new { htmlAttributes = new { @class = "form-control", @id = "valorHonorarios", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.TotalHonorariosAux, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.PorcentajeIva, "Porcentaje IVA", htmlAttributes: new { @type = "number", @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.PorcentajeIva, new { htmlAttributes = new { @class = "form-control", @id = "porcentajeIva", @readonly = "true" } }) %
                        @Html.ValidationMessageFor(model => model.PorcentajeIva, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.ValorBase, "Valor Base", htmlAttributes: new { @type = "number", @class = "control-label" })</div>
                        @Html.EditorFor(model => model.ValorBaseAux, new { htmlAttributes = new { @class = "form-control", @id = "valorBase", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.ValorBaseAux, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.ValorIva, "Valor IVA", htmlAttributes: new { @type = "number", @class = "control-label" })</div>
                        @Html.EditorFor(model => model.ValorIvaAux, new { htmlAttributes = new { @class = "form-control", @id = "valorIVA", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.ValorIvaAux, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <div>@Html.LabelFor(model => model.ValorCancelado, "Valor Cancelado", htmlAttributes: new { @type = "number", @class = "control-label" })</div>
                        @Html.EditorFor(model => model.ValorCanceladoAux, new { htmlAttributes = new { @class = "form-control", @id = "valorCancelado" } })
                        @Html.ValidationMessageFor(model => model.ValorCanceladoAux, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <div>@Html.LabelFor(model => model.Observaciones, "Observaciones", htmlAttributes: new { @class = "control-label" }) *</div>
                        @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control", @id = "observaciones", @style = "max-width: 500px" } })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group text-center">
                    <div class="col-md-12">
                        <input type="submit" id="btnEnviar" value="@(ViewBag.Accion)" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<a href="@Url.Action("Index", "Facturas")" class="btn btn-success">
    <i class="glyphicon glyphicon-list"></i> Regresar al Listado
</a>

@*Alert Error*@
<div class="modal fade" tabindex="-1" id="mensajeAccion" data-keyboard="false" data-backdrop="" style="position: center">
    <div class="modal-dialog alert-Error" style="width: 30%">
        <div class="">
            <div class="row" style="margin-left: 5px">
                <div class="col-lg-11 modal-body" id="textoMensaje" style="color: #fff"></div>
                <div class="col-lg-1 text-right">
                    <button type="button" id="btnClose" class="close" data-dismiss="modal" style="color: #fff !important; margin-right: 13px; margin-top: 13px">×</button>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")


<script type="text/javascript" src="~/Scripts/noGeneric/Facturas.js"></script>
<script type="text/javascript" src="~/Scripts/noGeneric/Utilidades.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#numeroContrato").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Facturas/GetContracts",
                    type: "POST",
                    dataType: "json",
                    data: { contract: $("#numeroContrato").val() },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.NumeroContrato, value: item.NumeroContrato };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>
